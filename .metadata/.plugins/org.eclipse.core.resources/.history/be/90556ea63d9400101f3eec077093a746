package day17;

import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

public class File02 {

	public static void main(String[] args) throws IOException {
		// FileWriter => 추가모드 가능.
		FileWriter fw = new FileWriter("test.txt");
		for(int i=1; i<=10; i++) {
			String data = i+". test!!\n";
			fw.write(data);
			fw.write("I/O Test File Output!!\n");
		}
		fw.close();
		
		// 추가모드 : 기존 파일에 데이터를 쓰려고 할 때
		FileWriter fw2 = new FileWriter("test.txt", true);
		for(int i=11; i<=20; i++) {
			String data = i+". test!!\n";
			fw2.write(data);
		}
		fw2.close();
		
		// PrintWriter => 추가모드가 없음.
		PrintWriter pw = new PrintWriter("writer.txt");
		for(int i=1; i<=10; i++) {
			String data = i+". test!!\n";
			pw.write(data);
			pw.write("I/O Test File Output!!\n");
		}
		pw.close();
		
		// PrintWriter 파일 내용 추가하기
		PrintWriter pw2 = new PrintWriter(new FileWriter("writer.txt", true));
		for(int i=11; i<=20; i++) {
			String data = i+". append mod!!\n";
			pw2.write(data);
		}
		pw2.close();
		
		// 바이트 기반 스트림
		FileOutputStream output = new FileOutputStream("out.txt");
		
		for(int i=1; i<=10; i++) {
			String data = i+". 바이트 기반 스트림 테스트\n";
			output.write(data.getBytes());
		}
		output.close();
		
		try {
            // 파일 출력 스트림 생성 (문자 기반)
            // 경로는 반드시 문자열로 지정해야 하며, 역슬래시는 이스케이프 처리 필요
            FileWriter fw3 = new FileWriter("D:\\web_0826_PJH\\memo\\text.txt");

            // 반복문을 통해 파일에 문자열 쓰기
            for (int i = 1; i <= 10; i++) {
                String data = i + ". test!!\n";
                fw3.write(data); // 줄 번호와 메시지 출력
                fw3.write("I/O Test File Output!!\n"); // 고정 메시지 출력
            }

            // 스트림 닫기 (자원 해제)
            fw3.close();
            System.out.println("파일 출력 완료");
        } catch (IOException e) {
            // 예외 처리: 파일 생성 또는 쓰기 중 오류 발생 시
            System.err.println("파일 출력 중 오류 발생: " + e.getMessage());
        }
	}
}
